type Mutation {
    createItem(item: CreateItemInput): CommonResult
    updateItem(item: UpdateItemInput): CommonResult
    deleteItem(id: Int): CommonResult
}

type Query {
    getAllItem(pageNumber: Int, pageSize: Int): AllItemResult
    getOneItem(id: Int): OneItemResult
}

input CreateItemInput {
    name: String
    explain: String
    style: String
    regular: String
    info: String
}

input UpdateItemInput {
    id: Int
    name: String
    explain: String
    style: String
    regular: String
    info: String
}

type AllItemResult {
    code: Int
    message: String
    total: Int
    data: [Item]
}

type OneItemResult {
    code: Int
    message: String
    data: Item
}

type Item {
    id: Int
    name: String
    explain: String
    style: String
    regular: String
    info: String
}